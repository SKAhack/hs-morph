module Main where

import Morph

main :: IO ()
main = do
    putStrLn "toSnake:"
    putStrLn $ toSnake "foo_bar_buzz"
    putStrLn $ toSnake "foo-bar-buzz"
    putStrLn $ toSnake "foo bar buzz"
    putStrLn $ toSnake "foo.bar.buzz"
    putStrLn $ toSnake "fooBarBuzz"
    putStrLn $ toSnake "FooBarBuzz"
    putStrLn "-----"
    putStrLn "toSnakeCaps:"
    putStrLn $ toSnakeCaps "foo_bar_buzz"
    putStrLn $ toSnakeCaps "foo-bar-buzz"
    putStrLn $ toSnakeCaps "foo bar buzz"
    putStrLn $ toSnakeCaps "foo.bar.buzz"
    putStrLn $ toSnakeCaps "fooBarBuzz"
    putStrLn $ toSnakeCaps "FooBarBuzz"
    putStrLn "-----"
    putStrLn "toDashed:"
    putStrLn $ toDashed "foo_bar_buzz"
    putStrLn $ toDashed "foo-bar-buzz"
    putStrLn $ toDashed "foo bar buzz"
    putStrLn $ toDashed "foo.bar.buzz"
    putStrLn $ toDashed "fooBarBuzz"
    putStrLn $ toDashed "FooBarBuzz"
    putStrLn "-----"
    putStrLn "toHuman:"
    putStrLn $ toHuman "foo_bar_buzz"
    putStrLn $ toHuman "foo-bar-buzz"
    putStrLn $ toHuman "foo bar buzz"
    putStrLn $ toHuman "foo.bar.buzz"
    putStrLn $ toHuman "fooBarBuzz"
    putStrLn $ toHuman "FooBarBuzz"
    putStrLn "-----"
    putStrLn "toTitle:"
    putStrLn $ toTitle "foo_bar_buzz"
    putStrLn $ toTitle "foo-bar-buzz"
    putStrLn $ toTitle "foo bar buzz"
    putStrLn $ toTitle "foo.bar.buzz"
    putStrLn $ toTitle "fooBarBuzz"
    putStrLn $ toTitle "FooBarBuzz"
    putStrLn "-----"
    putStrLn "toCamel:"
    putStrLn $ toCamel "foo_bar_buzz"
    putStrLn $ toCamel "foo-bar-buzz"
    putStrLn $ toCamel "foo bar buzz"
    putStrLn $ toCamel "foo.bar.buzz"
    putStrLn $ toCamel "fooBarBuzz"
    putStrLn $ toCamel "FooBarBuzz"
    putStrLn "-----"
    putStrLn "toUpperCamel:"
    putStrLn $ toUpperCamel "foo_bar_buzz"
    putStrLn $ toUpperCamel "foo-bar-buzz"
    putStrLn $ toUpperCamel "foo bar buzz"
    putStrLn $ toUpperCamel "foo.bar.buzz"
    putStrLn $ toUpperCamel "fooBarBuzz"
    putStrLn $ toUpperCamel "FooBarBuzz"
